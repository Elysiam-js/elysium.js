export Card = {
  render: (props) => {
    const { 
      title,
      subtitle,
      image,
      footer,
      shadow = 'medium',
      rounded = 'medium',
      padding = 'medium',
      children
    } = props;
    
    // Build class names
    const classes = [
      'els-card',
      `els-card-shadow-${shadow}`,
      `els-card-rounded-${rounded}`,
      `els-card-padding-${padding}`
    ].filter(Boolean).join(' ');
    
    // Build card header if title or image exists
    const cardHeader = (title || image) ? `
      <div class="els-card-header">
        ${image ? `<img src="${image}" alt="${title || 'Card image'}" class="els-card-image">` : ''}
        ${title ? `
          <div class="els-card-title-container">
            <h3 class="els-card-title">${title}</h3>
            ${subtitle ? `<p class="els-card-subtitle">${subtitle}</p>` : ''}
          </div>
        ` : ''}
      </div>
    ` : '';
    
    // Build card footer if it exists
    const cardFooter = footer ? `
      <div class="els-card-footer">
        ${footer}
      </div>
    ` : '';
    
    return `
      <div class="${classes}">
        ${cardHeader}
        <div class="els-card-body">
          ${children || ''}
        </div>
        ${cardFooter}
      </div>
    `;
  },
  
  styles: `
    /* Base Card Styles */
    .els-card {
      display: flex;
      flex-direction: column;
      background-color: white;
      overflow: hidden;
      width: 100%;
    }
    
    /* Shadow Variants */
    .els-card-shadow-none {
      box-shadow: none;
    }
    
    .els-card-shadow-small {
      box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    }
    
    .els-card-shadow-medium {
      box-shadow: 0 4px 6px -1px rgba(0,0,0,0.1), 0 2px 4px -1px rgba(0,0,0,0.06);
    }
    
    .els-card-shadow-large {
      box-shadow: 0 10px 15px -3px rgba(0,0,0,0.1), 0 4px 6px -2px rgba(0,0,0,0.05);
    }
    
    /* Border Radius Variants */
    .els-card-rounded-none {
      border-radius: 0;
    }
    
    .els-card-rounded-small {
      border-radius: 0.25rem;
    }
    
    .els-card-rounded-medium {
      border-radius: 0.5rem;
    }
    
    .els-card-rounded-large {
      border-radius: 1rem;
    }
    
    /* Padding Variants */
    .els-card-padding-none {
      padding: 0;
    }
    
    .els-card-padding-small {
      padding: 0.75rem;
    }
    
    .els-card-padding-medium {
      padding: 1.5rem;
    }
    
    .els-card-padding-large {
      padding: 2.5rem;
    }
    
    /* Card Header */
    .els-card-header {
      margin-bottom: 1rem;
    }
    
    .els-card-image {
      width: 100%;
      height: auto;
      object-fit: cover;
      margin-bottom: 1rem;
    }
    
    .els-card-title-container {
      margin-bottom: 0.5rem;
    }
    
    .els-card-title {
      font-size: 1.25rem;
      font-weight: 600;
      margin: 0 0 0.25rem 0;
      color: #1f2937;
    }
    
    .els-card-subtitle {
      font-size: 0.875rem;
      color: #6b7280;
      margin: 0;
    }
    
    /* Card Body */
    .els-card-body {
      flex: 1;
    }
    
    /* Card Footer */
    .els-card-footer {
      margin-top: 1.5rem;
      padding-top: 1rem;
      border-top: 1px solid #e5e7eb;
    }
  `
}
